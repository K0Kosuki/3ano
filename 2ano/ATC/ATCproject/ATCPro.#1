#include <c8051f380.h>

// Digits 0 to 9 to display on the 7-segment display
char digits[10] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x98};

// Reload value for Timer 0
int reload = -50000;

// Variables to store the count, the tens and units digits of the count
unsigned int counter = 0;
char unidades = 0;
char dezenas = 0;

// Variable to store the digits while the timer is paused
char split_unidades = 0;
char split_dezenas = 0;

// Flag to indicate whether the timer is paused or not
char paused = 0;

// Interrupt Service Routine for Timer 0
void timer0_ISR(void) __interrupt(1)
{
    // Reload Timer 0
    TH0 = reload >>8;
    TL0 = reload;
    
    // Increment the count
    counter++;
    
    // Check if the count has reached 100
    if (counter == 100)
    {
        // If so, reset the count to 0
        counter = 0;
    }
    
    // Update the tens and units digits with the current digits of the count
    unidades = counter % 10;
    dezenas = counter / 10;
    
    // If the timer is paused, store the current digits in the temporary variables
    if (paused)
    {
        split_unidades = unidades;
        split_dezenas = dezenas;
    }
}

// Configuration of the microcontroller
void config(void)
{
    PCA0MD = 0x00;
    XBR1 = 0x40;
         
    CLKSEL =0x03;          // System clock = 48 MHz
    CKCON = 0x02;          // Divide the system clock by 48, obtaining a frequency of 1 MHz
    TMOD = 0x01;           // Timer 0, mode 1
    
    EA = 1;                // Enable interrupts
    ET0 = 1;               // Enable interrupt for Timer 0
}

// Initialize Timer 0
void init_timer0(void)
{
    TR0 = 1;
}

// Stop Timer 0
void stop_timer0(void)
{
    TR0 = 0;
}

int main(void)
{
    // Configure the microcontroller
    config();
    
    // Infinite loop
    while (1)
    {
        // Read the state of the button
        char button = P0_6;
        
        // Toggle the state of the timer based on the state of the button and the switch
        if (button && SW)
        {
            paused = !paused;
            if (paused)
            {
                stop_timer0();
            }
            else
            {
                init_timer0();
            }
        }
        
        // Display the current count on the 7-segment display
        if (!paused)
        {            // If the timer is not paused, display the tens and units digits of the current count
            P2 = digits[dezenas];
            P3 = digits[unidades];
        }
        else
        {
            // If the timer is paused, display the tens and units digits stored in the temporary variables
            P2 = digits[split_dezenas];
            P3 = digits[split_unidades];
        }
    }
    
    return 0;
}



